// Copyright 2020 Tianyi Shi
// Licensed under the MIT license (http://opensource.org/licenses/MIT)
// This file may not be copied, modified, or distributed
// except according to those terms.

//! The BLOSUM30 substitution matrix
//!
//! Cluster Percentage: >= 30
//! Entropy =   0.1424, Expected =  -0.1074

use crate::scores::lookup;

const MAT: [i32; 729] = [
    4, 0, -3, 0, 0, -2, 0, -2, 0, -1, 0, -1, 1, 0, 0, -1, 1, -1, 1, 1, 0, 1, -5, 0, -4, 0, -7, 0,
    5, -2, 5, 0, -3, 0, -2, -2, -2, 0, -1, -2, 4, -1, -2, -1, -2, 0, 0, -1, -2, -5, -1, -3, 0, -7,
    -3, -2, 17, -3, 1, -3, -4, -5, -2, -1, -3, 0, -2, -1, -2, -3, -2, -2, -2, -2, -2, -2, -2, -2,
    -6, 0, -7, 0, 5, -3, 9, 1, -5, -1, -2, -4, -3, 0, -1, -3, 1, -1, -1, -1, -1, 0, -1, -1, -2, -4,
    -1, -1, 0, -7, 0, 0, 1, 1, 6, -4, -2, 0, -3, -2, 2, -1, -1, -1, -1, 1, 2, -1, 0, -2, -1, -3,
    -1, -1, -2, 5, -7, -2, -3, -3, -5, -4, 10, -3, -3, 0, 1, -1, 2, -2, -1, -1, -4, -3, -1, -1, -2,
    -1, 1, 1, -1, 3, -4, -7, 0, 0, -4, -1, -2, -3, 8, -3, -1, -2, -1, -2, -2, 0, -1, -1, -2, -2, 0,
    -2, -1, -3, 1, -1, -3, -2, -7, -2, -2, -5, -2, 0, -3, -3, 14, -2, -2, -2, -1, 2, -1, -1, 1, 0,
    -1, -1, -2, -1, -3, -5, -1, 0, 0, -7, 0, -2, -2, -4, -3, 0, -1, -2, 6, 4, -2, 2, 1, 0, 0, -3,
    -2, -3, -1, 0, 0, 4, -3, 0, -1, -3, -7, -1, -2, -1, -3, -2, 1, -2, -2, 4, 4, -2, 3, 2, -1, 0,
    -3, -2, -3, -2, 0, 0, 3, -3, 0, 1, -2, -7, 0, 0, -3, 0, 2, -1, -1, -2, -2, -2, 4, -2, 2, 0, 0,
    1, 0, 1, 0, -1, 0, -2, -2, 0, -1, 1, -7, -1, -1, 0, -1, -1, 2, -2, -1, 2, 3, -2, 4, 2, -2, 0,
    -3, -2, -2, -2, 0, 0, 1, -2, 0, 3, -1, -7, 1, -2, -2, -3, -1, -2, -2, 2, 1, 2, 2, 2, 6, 0, 0,
    -4, -1, 0, -2, 0, 0, 0, -3, 0, -1, -1, -7, 0, 4, -1, 1, -1, -1, 0, -1, 0, -1, 0, -2, 0, 8, 0,
    -3, -1, -2, 0, 1, 0, -2, -7, 0, -4, -1, -7, 0, -1, -2, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0,
    -1, -1, 0, -1, 0, 0, -1, 0, -2, -1, -1, 0, -7, -1, -2, -3, -1, 1, -4, -1, 1, -3, -3, 1, -3, -4,
    -3, -1, 11, 0, -1, -1, 0, -1, -4, -3, -1, -2, 0, -7, 1, -1, -2, -1, 2, -3, -2, 0, -2, -2, 0,
    -2, -1, -1, 0, 0, 8, 3, -1, 0, 0, -3, -1, 0, -1, 4, -7, -1, -2, -2, -1, -1, -1, -2, -1, -3, -3,
    1, -2, 0, -2, -1, -1, 3, 8, -1, -3, -1, -1, 0, -1, 0, 0, -7, 1, 0, -2, 0, 0, -1, 0, -1, -1, -2,
    0, -2, -2, 0, 0, -1, -1, -1, 4, 2, 0, -1, -3, 0, -2, -1, -7, 1, 0, -2, -1, -2, -2, -2, -2, 0,
    0, -1, 0, 0, 1, 0, 0, 0, -3, 2, 5, 0, 1, -5, 0, -1, -1, -7, 0, -1, -2, -1, -1, -1, -1, -1, 0,
    0, 0, 0, 0, 0, -1, -1, 0, -1, 0, 0, -1, 0, -2, -1, -1, 0, -7, 1, -2, -2, -2, -3, 1, -3, -3, 4,
    3, -2, 1, 0, -2, 0, -4, -3, -1, -1, 1, 0, 5, -3, 0, 1, -3, -7, -5, -5, -2, -4, -1, 1, 1, -5,
    -3, -3, -2, -2, -3, -7, -2, -3, -1, 0, -3, -5, -2, -3, 20, -2, 5, -1, -7, 0, -1, -2, -1, -1,
    -1, -1, -1, 0, 0, 0, 0, 0, 0, -1, -1, 0, -1, 0, 0, -1, 0, -2, -1, -1, 0, -7, -4, -3, -6, -1,
    -2, 3, -3, 0, -1, 1, -1, 3, -1, -4, -1, -2, -1, 0, -2, -1, -1, 1, 5, -1, 9, -2, -7, 0, 0, 0, 0,
    5, -4, -2, 0, -3, -2, 1, -1, -1, -1, 0, 0, 4, 0, -1, -1, 0, -3, -1, 0, -2, 4, -7, -7, -7, -7,
    -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, 1,
];

/// Return the substitution score in blosum30 matrix between two amino acids (single characters as `u8`)
pub fn blosum30(a: u8, b: u8) -> i32 {
    MAT[lookup(a) * 27 + lookup(b)]
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_blosum30() {
        let score1 = blosum30(b'A', b'A');
        assert_eq!(score1, 4);
        let score2 = blosum30(b'O', b'*');
        assert_eq!(score2, -7);
        let score3 = blosum30(b'A', b'*');
        assert_eq!(score3, -7);
        let score4 = blosum30(b'*', b'*');
        assert_eq!(score4, 1);
        let score5 = blosum30(b'X', b'X');
        assert_eq!(score5, -1);
        let score6 = blosum30(b'X', b'Z');
        assert_eq!(score6, 0);
    }
}
