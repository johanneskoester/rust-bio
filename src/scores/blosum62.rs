// Copyright 2014-2017 M. Rizky Luthfianto.
// Revisions Copyright 2020 Tianyi Shi.
// Licensed under the MIT license (http://opensource.org/licenses/MIT)
// This file may not be copied, modified, or distributed
// except according to those terms.

//! The BLOSUM62 substitution matrix
//!
//! Cluster Percentage: >= 62
//! Entropy = 0.6979, Expected = -0.5209

use crate::scores::lookup;

const MAT: [i32; 729] = [
    4, -2, 0, -2, -1, -2, 0, -2, -1, -1, -1, -1, -1, -2, 0, -1, -1, -1, 1, 0, 0, 0, -3, 0, -2, -1,
    -4, -2, 4, -3, 4, 1, -3, -1, 0, -3, -4, 0, -4, -3, 3, -1, -2, 0, -1, 0, -1, -1, -3, -4, -1, -3,
    1, -4, 0, -3, 9, -3, -4, -2, -3, -3, -1, -1, -3, -1, -1, -3, -2, -3, -3, -3, -1, -1, -2, -1,
    -2, -2, -2, -3, -4, -2, 4, -3, 6, 2, -3, -1, -1, -3, -4, -1, -4, -3, 1, -1, -1, 0, -2, 0, -1,
    -1, -3, -4, -1, -3, 1, -4, -1, 1, -4, 2, 5, -3, -2, 0, -3, -3, 1, -3, -2, 0, -1, -1, 2, 0, 0,
    -1, -1, -2, -3, -1, -2, 4, -4, -2, -3, -2, -3, -3, 6, -3, -1, 0, 0, -3, 0, 0, -3, -1, -4, -3,
    -3, -2, -2, -1, -1, 1, -1, 3, -3, -4, 0, -1, -3, -1, -2, -3, 6, -2, -4, -4, -2, -4, -3, 0, -1,
    -2, -2, -2, 0, -2, -1, -3, -2, -1, -3, -2, -4, -2, 0, -3, -1, 0, -1, -2, 8, -3, -3, -1, -3, -2,
    1, -1, -2, 0, 0, -1, -2, -1, -3, -2, -1, 2, 0, -4, -1, -3, -1, -3, -3, 0, -4, -3, 4, 3, -3, 2,
    1, -3, -1, -3, -3, -3, -2, -1, -1, 3, -3, -1, -1, -3, -4, -1, -4, -1, -4, -3, 0, -4, -3, 3, 3,
    -3, 3, 2, -3, -1, -3, -3, -3, -2, -1, -1, 2, -3, -1, -1, -3, -4, -1, 0, -3, -1, 1, -3, -2, -1,
    -3, -3, 5, -2, -1, 0, -1, -1, 1, 2, 0, -1, -1, -2, -3, -1, -2, 1, -4, -1, -4, -1, -4, -3, 0,
    -4, -3, 2, 3, -2, 4, 2, -3, -1, -3, -2, -2, -2, -1, -1, 1, -2, -1, -1, -3, -4, -1, -3, -1, -3,
    -2, 0, -3, -2, 1, 2, -1, 2, 5, -2, -1, -2, 0, -1, -1, -1, -1, 1, -1, -1, -1, -1, -4, -2, 3, -3,
    1, 0, -3, 0, 1, -3, -3, 0, -3, -2, 6, -1, -2, 0, 0, 1, 0, -1, -3, -4, -1, -2, 0, -4, 0, -1, -2,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, -1, -1, 0, 0, -1, -1, -2, -1, -1, -1, -4,
    -1, -2, -3, -1, -1, -4, -2, -2, -3, -3, -1, -3, -2, -2, -2, 7, -1, -2, -1, -1, -2, -2, -4, -2,
    -3, -1, -4, -1, 0, -3, 0, 2, -3, -2, 0, -3, -3, 1, -2, 0, 0, -1, -1, 5, 1, 0, -1, -1, -2, -2,
    -1, -1, 3, -4, -1, -1, -3, -2, 0, -3, -2, 0, -3, -3, 2, -2, -1, 0, -1, -2, 1, 5, -1, -1, -1,
    -3, -3, -1, -2, 0, -4, 1, 0, -1, 0, 0, -2, 0, -1, -2, -2, 0, -2, -1, 1, 0, -1, 0, -1, 4, 1, 0,
    -2, -3, 0, -2, 0, -4, 0, -1, -1, -1, -1, -2, -2, -2, -1, -1, -1, -1, -1, 0, 0, -1, -1, -1, 1,
    5, 0, 0, -2, 0, -2, -1, -4, 0, -1, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, -1,
    -1, 0, 0, -1, -1, -2, -1, -1, -1, -4, 0, -3, -1, -3, -2, -1, -3, -3, 3, 2, -2, 1, 1, -3, -1,
    -2, -2, -3, -2, 0, -1, 4, -3, -1, -1, -2, -4, -3, -4, -2, -4, -3, 1, -2, -2, -3, -3, -3, -2,
    -1, -4, -2, -4, -2, -3, -3, -2, -2, -3, 11, -2, 2, -3, -4, 0, -1, -2, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -2, -1, -1, 0, 0, -1, -1, -2, -1, -1, -1, -4, -2, -3, -2, -3, -2, 3,
    -3, 2, -1, -1, -2, -1, -1, -2, -1, -3, -1, -2, -2, -2, -1, -1, 2, -1, 7, -2, -4, -1, 1, -3, 1,
    4, -3, -2, 0, -3, -3, 1, -3, -1, 0, -1, -1, 3, 0, 0, -1, -1, -2, -3, -1, -2, 4, -4, -4, -4, -4,
    -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, 1,
];

/// Return the substitution score in blosum62 matrix between two amino acids (single characters as `u8`)
pub fn blosum62(a: u8, b: u8) -> i32 {
    MAT[lookup(a) * 27 + lookup(b)]
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_blosum62() {
        let score1 = blosum62(b'A', b'A');
        assert_eq!(score1, 4);
        let score2 = blosum62(b'O', b'*');
        assert_eq!(score2, -4);
        let score3 = blosum62(b'A', b'*');
        assert_eq!(score3, -4);
        let score4 = blosum62(b'*', b'*');
        assert_eq!(score4, 1);
        let score5 = blosum62(b'X', b'X');
        assert_eq!(score5, -1);
        let score6 = blosum62(b'X', b'Z');
        assert_eq!(score6, -1);
    }
}
